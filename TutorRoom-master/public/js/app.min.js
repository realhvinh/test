/*

  NOTE: PeerConnectionView based on video_call_with_chat_and_file_sharing.html by Rob Manson
        See https://github.com/buildar/getting_started_with_webrtc for more info
        
  The MIT License
  
  Copyright (c) 2013 Rob Manson, http://buildAR.com. All rights reserved.
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.

*/
var ModelItem=Backbone.Model.extend({defaults:{cameraViewReference:null,supportsWebRTC:!1,supportsMediaRecorderAPI:!1,localStream:null,remoteStream:null,appHeight:800,cameraMaxWidth:1280,cameraMaxHeight:720,cameraMinWidth:640,cameraMinHeight:360,includeAudio:!1,cameraScaleComplete:!1,prepRecording:!1,publishRecording:!1,errorMsgArray:['<h1>WebRTC required - Sorry, unable to connect to camera</h1><p>Please ensure no other devices are using the camera and refresh the browser.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/API/WebRTC">More information about WebRTC</a></p>',"Sorry, the recorder has stopped unexpectedly"],mime:"video/webm",ext1:".webm",fileAddress:null,fileLoad:!1,scaleAssets:!1,socketAddress:"http://localhost:8080",token:null,stun_server:"stun.l.google.com:19302",createOffer:!1,offer:null,receiveOffer:null,ice:!1,iceCandidate:null,receiveIce:!1,receiveIceCandidate:null,toggleRemote:!0,supportsFileAPI:!1,fileShareAddress:null,fileShareMimeType:null,fileShareExtension:null,fileShareLoad:!1,storedBlob:null,receivedBlobArray:new Array,receivedBlob:null,fileSlice:1024},initialize:function(){_.bindAll(this,"featureSupport"),this.featureSupport()},featureSupport:function(){navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&this.set("supportsWebRTC",!0),window.MediaRecorder&&window.Blob&&window.FileReader&&this.set("supportsMediaRecorderAPI",!0),window.File&&window.FileReader&&window.FileList&&window.Blob&&this.set("supportsFileAPI",!0)}}),SocketView=Backbone.View.extend({model:null,socket:null,initialize:function(){_.bindAll(this,"render","setToken","sendOffer","sendIce"),this.model.bind("change:cameraScaleComplete",this.render,this)},render:function(){this.model.bind("change:offer",this.sendOffer,this),this.model.bind("change:ice",this.sendIce,this),this.model.bind("change:storedBlob",this.fileshare,this),this.socket=io.connect(this.model.get("socketAddress"));var a=this;this.socket.on("handshake",function(b){console.log("Client handshake callback: "+b),a.setToken()}),this.socket.on("token-received",function(b){console.log("Client token-received callback: "+b),a.model.set("token",b)}),this.socket.on("token-users",function(b){console.log("Client token-users callback: "+b),a.model.set("createOffer",!0)}),this.socket.on("offer",function(b){console.log("Client offer callback: "+b),a.model.set("receiveOffer",b)}),this.socket.on("ice",function(b){console.log("Client ice callback: "+b),a.model.set("receiveIceCandidate",b),a.model.set("receiveIce",!a.model.get("receiveIce"))}),this.socket.on("fileshare",function(b){console.log("Client fileshare callback");var c=a.model.get("receivedBlobArray");c[c.length]=b,a.model.set("receivedBlobArray",c)}),this.socket.on("fileshare-complete",function(b){console.log("Client fileshare complete callback"),a.model.set("receivedExtension",b),a.model.set("receivedBlob",a.model.get("receivedBlobArray").join("")),a.model.set("receivedBlobArray",new Array)})},setToken:function(){if(null==this.model.get("token"))if(""==document.location.hash){var a=Date.now()+"-"+Math.round(1e4*Math.random());document.location.hash=a,this.socket.emit("setToken",a)}else{var a=String(document.location.hash).split("#")[1];this.socket.emit("setToken",a)}},sendOffer:function(){this.socket.emit("offer",this.model.get("offer"))},sendIce:function(){this.socket.emit("ice",this.model.get("iceCandidate"))},fileshare:function(){var a=0;a=this.model.get("storedBlob").length/this.model.get("fileSlice")%1>0?Math.round(this.model.get("storedBlob").length/this.model.get("fileSlice"))+1:this.model.get("storedBlob").length/this.model.get("fileSlice"),console.log("Client: emit fileshare, number of parts: "+a);for(var b=0;a>b;b++)this.socket.emit("fileshare",this.model.get("storedBlob").slice(b*this.model.get("fileSlice"),b*this.model.get("fileSlice")+this.model.get("fileSlice")));this.socket.emit("fileshare-complete",this.model.get("fileShareExtension"))}}),PeerConnectionView=Backbone.View.extend({model:null,peer_connection:null,initialize:function(){_.bindAll(this,"render","createOffer","receiveOffer","receiveIce","log_error"),this.model.bind("change:token",this.render,this)},render:function(){console.log("Rendering: PeerConnectionView"),this.model.bind("change:createOffer",this.createOffer,this),this.model.bind("change:receiveOffer",this.receiveOffer,this),this.model.bind("change:receiveIce",this.receiveIce,this);var a=this;console.log("Stun server: "+this.model.get("stun_server"));var b=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection||window.msRTCPeerConnection;this.peer_connection=new b({iceServers:[{urls:"stun:"+this.model.get("stun_server")}]}),this.peer_connection.onicecandidate=function(b){console.log("peer_connection.onicecandidate"),b.candidate&&(a.model.set("iceCandidate",b.candidate),a.model.set("ice",!a.model.get("ice")))},this.peer_connection.onaddstream=function(b){b.stream&&(console.log("peer_connection.onaddstream"),a.model.set("remoteStream",b.stream))},this.peer_connection.addStream(this.model.get("localStream"))},createOffer:function(){console.log("PeerConnectionView: creating offer");var a=this;this.peer_connection.createOffer(function(b){a.peer_connection.setLocalDescription(b,function(){a.model.set("offer",b)},a.log_error)},a.log_error)},receiveOffer:function(){console.log("PeerConnectionView: offer received");var a=this,b=window.RTCSessionDescription||window.mozRTCSessionDescription||window.webkitRTCSessionDescription||window.msRTCSessionDescription;this.peer_connection.setRemoteDescription(new b(this.model.get("receiveOffer")),function(){"offer"==a.peer_connection.remoteDescription.type&&a.peer_connection.createAnswer(function(b){a.peer_connection.setLocalDescription(b,function(){a.model.set("offer",b)},a.log_error)},a.log_error)},a.log_error)},receiveIce:function(){var a=window.RTCIceCandidate||window.mozRTCIceCandidate;this.peer_connection.addIceCandidate(new a(this.model.get("receiveIceCandidate")))},log_error:function(a){console.log("Error: "+a)}}),PlaybackView=Backbone.View.extend({el:null,model:null,initialize:function(){_.bindAll(this,"loadFile","validateDOM","prepRecording"),this.model.bind("change:fileLoad",this.loadFile,this),this.model.bind("change:prepRecording",this.prepRecording,this)},loadFile:function(){if(null!=this.model.get("fileAddress")&&1==this.validateDOM()){var a=this,b=new FileReader;b.onloadend=function(c){c.target.readyState==FileReader.DONE&&($(a.el).attr("src",c.target.result),$(a.el).attr("width",a.model.get("cameraMaxWidth")),$(a.el).attr("width",a.model.get("cameraMaxHeight")),$(a.el).css("display","block"),a.model.set("scaleAssets",!a.model.get("scaleAssets"))),b=null},//onloadend
b.readAsDataURL(this.model.get("fileAddress"))}},validateDOM:function(){return $(this.el).length>0},prepRecording:function(){$(this.el).css("display","none")}}),RemoteView=Backbone.View.extend({el:null,model:null,initialize:function(){_.bindAll(this,"render","toggleRemote","resetRemote","validateDOM"),this.model.bind("change:remoteStream",this.render,this)},render:function(){if(1==this.validateDOM()){console.log("Attaching incoming video stream to target"),this.model.bind("change:toggleRemote",this.toggleRemote,this),this.model.bind("change:fileLoad",this.resetRemote,this);var a=this.model.get("remoteStream"),b=this.el;b.src=window.URL.createObjectURL(a),$(this.el).css("display","block"),this.toggleRemote()}},toggleRemote:function(){1==this.model.get("toggleRemote")?$(this.el).addClass("remote"):$(this.el).removeClass("remote")},resetRemote:function(){this.model.set("toggleRemote",!0)},validateDOM:function(){return $(this.el).length>=1}}),AddressBarView=Backbone.View.extend({el:null,model:null,initialize:function(){_.bindAll(this,"render","validateDOM"),this.model.bind("change:token",this.render,this)},render:function(){1==this.validateDOM()&&($(this.el).html('<p><a href="mailto:'+window.location+'">'+window.location+"</a></p>"),$(this.el).css("display","block"))},validateDOM:function(){return $(this.el).length>=1}}),MediaRecorderView=Backbone.View.extend({model:null,recorder:null,blobArray:[],recordingStopped:!1,recordingProcessed:!1,initialize:function(){_.bindAll(this,"render","publishRecording","recordStart","recordStop","readBlob"),this.model.bind("change:cameraScaleComplete",this.render,this)},render:function(){this.model.bind("change:publishRecording",this.publishRecording,this)},publishRecording:function(){1==this.model.get("publishRecording")?this.recordStart():this.recordStop()},recordStart:function(){if(this.blobArray=[],this.recordingStopped=!1,this.recordingProcessed=!1,null!=this.model.get("localStream")){this.recorder=new window.MediaRecorder(this.model.get("localStream"));var a=this;this.recorder.ondataavailable=function(b){if(console.log("ondataavailable"),b.data.size>0&&a.blobArray.push(b.data),1==a.recordingStopped&&"inactive"==a.recorder.state&&0==a.model.get("publishRecording")&&a.blobArray.length>0&&0==a.recordingProcessed){
//ondataavailable event fired after the onstop event
var c=new window.Blob(a.blobArray,{type:a.model.get("mime")});a.readBlob(c)}},this.recorder.onstop=function(){if(console.log("onstop"),a.recorder=null,1==a.model.get("publishRecording"))alert(a.model.get("errorMsgArray")[1]);else if(a.blobArray.length>0){var b=new window.Blob(a.blobArray,{type:a.model.get("mime")});a.readBlob(b),a.recordingProcessed=!0}a.recordingStopped=!0},this.recorder.start()}},recordStop:function(){this.recorder.stop()},readBlob:function(a){this.model.set("fileAddress",a),this.model.set("fileLoad",!this.model.get("fileLoad"))}}),MenuView=Backbone.View.extend({el:null,initialize:function(){_.bindAll(this,"render","validateDOM","handleCameraPublishing","prepRecording","prepPlayback","applyStyles"),this.model.bind("change:cameraScaleComplete",this.render,this)},render:function(){1==this.validateDOM()&&(this.model.bind("change:publishRecording",this.handleCameraPublishing,this),this.model.bind("change:prepRecording",this.prepRecording,this),$(this.$("button")[0]).css("display","inline-block"))},validateDOM:function(){return $(this.el).length>0&&1==this.model.get("supportsMediaRecorderAPI")&&1==this.model.get("supportsWebRTC")?($(this.el).css("display","block"),!0):!1},handleCameraPublishing:function(){0==this.model.get("publishRecording")?(this.prepPlayback(),this.removeStyles()):(this.prepRecording(),this.applyStyles())},prepPlayback:function(){$(this.$("button")[0]).css("display","none"),$(this.$("button")[1]).css("display","inline-block"),$(this.$("button")[2]).css("display","inline-block")},prepRecording:function(){$(this.$("button")[0]).css("display","inline-block"),$(this.$("button")[1]).css("display","none"),$(this.$("button")[2]).css("display","none")},applyStyles:function(){$(this.$("button")[0]).addClass("btn-pulse")},removeStyles:function(){$(this.$("button")[0]).removeClass("btn-pulse")}}),FileDropView=Backbone.View.extend({el:null,model:null,initialize:function(){_.bindAll(this,"render","displayFile","validateDOM"),this.model.bind("change:remoteStream",this.render,this)},render:function(){1==this.validateDOM()&&(this.model.bind("change:receivedBlob",this.displayFile,this),$(this.el).css("display","block"),$(this.el).addClass("file-ready"))},displayFile:function(){console.log("FileDropView: displayFile");var a=this.model.get("receivedBlob");$(this.el).html('<p><a download="'+String(String((new Date).getTime())+String(Math.floor(1e5*Math.random()+1)))+this.model.get("receivedExtension")+'" href="'+a+'">Download file</a></p>'),1==$(this.el).hasClass("file-ready")&&$(this.el).removeClass("file-ready"),0==$(this.el).hasClass("file-received")&&$(this.el).addClass("file-received")},validateDOM:function(){return $(this.el).length>=1&&1==this.model.get("supportsFileAPI")}}),FileShareLoaderView=Backbone.View.extend({model:null,initialize:function(){_.bindAll(this,"loadFile"),this.model.bind("change:fileShareLoad",this.loadFile,this)},loadFile:function(){console.log("loadFile");var a=this,b=new FileReader;b.onloadend=function(c){if(console.log("onloadend: "+c.target.readyState),c.target.readyState==FileReader.DONE){var d=c.target.result;a.model.set("storedBlob",d)}b=null},b.readAsDataURL(this.model.get("fileShareAddress"))}}),ThumbnailView=Backbone.View.extend({el:null,model:null,initialize:function(){_.bindAll(this,"render","validateDOM"),this.model.bind("change:fileAddress",this.render,this)},render:function(){if(1==this.validateDOM()){"none"==$(this.el).css("display")&&$(this.el).css("display","block");var a=this.model.get("fileAddress"),b=new Date,c=b.getTime();a.lastModifiedDate=b,a.name=String(c)+(String(Math.floor(1e5*Math.random()+1))+this.model.get("ext1"));var d=URL.createObjectURL(a);$(this.el).find("a").attr("href",d),$(this.el).find("a").attr("download",a.name);var e=this.model.get("cameraViewReference"),f=e.target;if($(f).length>0){var g=this.$("canvas")[0];$(g).length>0&&g.getContext("2d").drawImage(f,0,0,this.model.get("cameraMaxWidth")/8,this.model.get("cameraMaxHeight")/8)}}},validateDOM:function(){return $(this.el).length>=1}}),CameraView=Backbone.View.extend({el:null,target:null,initialize:function(){_.bindAll(this,"render","validateDOM","supportsWebRTC","readyFunction","handleCameraPublishing","handleCameraPrep","toggleRemote")},render:function(){if(1==this.validateDOM()){this.model.bind("change:toggleRemote",this.toggleRemote,this);var a=this;$(this.el).on("canplay",this.readyFunction),this.target=this.el;var b={width:{min:this.model.get("cameraMinWidth"),ideal:this.model.get("cameraMaxWidth"),max:this.model.get("cameraMaxWidth")},height:{min:this.model.get("cameraMinHeight"),ideal:this.model.get("cameraMaxHeight"),max:this.model.get("cameraMaxHeight")}},c=navigator.mediaDevices.getUserMedia({audio:this.model.get("includeAudio"),video:b});c.then(function(b){
//$(viewReference.el).attr('src', window.URL.createObjectURL(mediaStream));//Deprecated
a.el.srcObject=b,
//document.getElementById('camera').srcObject = mediaStream; //Alternative                
a.model.set({localStream:b})}),c["catch"](function(a){alert(a)})}else $(this.el).parent().html(this.model.get("errorMsgArray")[0])},validateDOM:function(){return $(this.el).length>0&&1==this.supportsWebRTC()},supportsWebRTC:function(){return!!this.model.get("supportsWebRTC")},readyFunction:function(a){0==this.model.get("cameraScaleComplete")&&($(this.el).attr("width",this.model.get("cameraMaxWidth")),$(this.el).attr("height",this.model.get("cameraMaxHeight")),this.model.bind("change:publishRecording",this.handleCameraPublishing,this),this.model.bind("change:prepRecording",this.handleCameraPrep,this),this.model.set("cameraScaleComplete",!0),this.model.set("scaleAssets",!this.model.get("scaleAssets")))},handleCameraPublishing:function(){0==this.model.get("publishRecording")?$(this.el).css("display","none"):$(this.el).css("display","block")},handleCameraPrep:function(){$(this.el).css("display","block")},toggleRemote:function(){0==this.model.get("toggleRemote")?$(this.el).addClass("remote"):$(this.el).removeClass("remote")}}),ScaleManager=Backbone.View.extend({el:null,model:null,initialize:function(){_.bindAll(this,"render","scaleContainer","validateDOM","scaleTarget","setTargetOrigin"),this.render()},render:function(){1==this.validateDOM()&&this.model.bind("change:scaleAssets",this.scaleContainer,this)},scaleContainer:function(a){Number($(window).width())<this.model.get("cameraMaxWidth")?(this.scaleTarget(this.el,100*Number($(window).width())/this.model.get("cameraMaxWidth")/100),this.setTargetOrigin(this.el,"left top 0")):Number($(window).height())<this.model.get("appHeight")?(this.scaleTarget(this.el,100*Number($(window).height())/this.model.get("appHeight")/100),this.setTargetOrigin(this.el,"center top 0")):(this.scaleTarget(this.el,1),this.setTargetOrigin(this.el,"center top 0"))},validateDOM:function(){return $(this.el).length>0},scaleTarget:function(a,b){$(a).css("transform","scale("+b+","+b+")"),$(a).css("ms-transform","scale("+b+","+b+")"),$(a).css("-webkit-transform","scale("+b+","+b+")")},setTargetOrigin:function(a,b){$(a).css("transform-origin",b),$(a).css("-ms-transform-origin",b),$(a).css("-webkit-transform-origin",b)}}),ControllerItem=Backbone.View.extend({el:null,events:function(){return _.extend({"click #btn-record":"toggleRecord"},{"click #btn-cancel":"clearRecording"},{"click #btn-rewind":"reloadRecording"},{"click .remote":"toggleRemote"},{"dragover .file-drop":"fileDragOver"},{"drop .file-drop":"fileDragDrop"})},initialize:function(){_.bindAll(this,"render","resizeWindow","toggleRecord","clearRecording","reloadRecording","toggleRemote","processFile","fileDragOver","fileDragDrop"),this.render()},render:function(){var a=this.model.get("cameraViewReference");a.render(),$(window).bind("resize",this.resizeWindow)},resizeWindow:function(){this.model.set("scaleAssets",!this.model.get("scaleAssets"))},toggleRecord:function(a){this.model.set("publishRecording",!this.model.get("publishRecording"))},clearRecording:function(a){this.model.set("prepRecording",!this.model.get("prepRecording"))},reloadRecording:function(a){this.model.set("fileLoad",!this.model.get("fileLoad"))},toggleRemote:function(a){this.model.set("prepRecording",!this.model.get("prepRecording")),this.model.set("toggleRemote",!this.model.get("toggleRemote"))},processFile:function(a){this.model.set("fileShareAddress",a),this.model.set("fileShareMimeType",a.type),this.model.set("fileShareExtension","."+String(a.name.split(".")[a.name.split(".").length-1])),this.model.set("fileShareLoad",!this.model.get("fileShareLoad"))},fileDragOver:function(a){console.log("fileDragOver"),a.stopPropagation(),a.preventDefault(),void 0!=a.dataTransfer?
//console.log (event.dataTransfer.files);
a.dataTransfer.dropEffect="copy":void 0!=a.originalEvent.dataTransfer&&(
//console.log (event.originalEvent.dataTransfer.files);
a.originalEvent.dataTransfer.dropEffect="copy")},fileDragDrop:function(a){if(console.log("fileDragDrop"),a.stopPropagation(),a.preventDefault(),void 0!=a.dataTransfer){console.log(a.dataTransfer.files);var b=a.dataTransfer.files}else if(void 0!=a.originalEvent.dataTransfer){console.log(a.originalEvent.dataTransfer.files);var b=a.originalEvent.dataTransfer.files}if(b.length>0){var c=b[0];this.processFile(c)}}});$(document).ready(function(){!function(a){var b=new ModelItem,c=(new SocketView({model:b}),new PeerConnectionView({model:b}),new PlaybackView({model:b,el:a("#playback")}),new RemoteView({model:b,el:a("#remote")}),new AddressBarView({model:b,el:a(".address-bar")}),new MediaRecorderView({model:b}),new MenuView({model:b,el:a(".menu")}),new FileDropView({model:b,el:a(".file-drop")}),new FileShareLoaderView({model:b}),new ThumbnailView({model:b,el:a(".thumbnails")}),new ScaleManager({model:b,el:a(".container")}),new CameraView({model:b,el:a("#camera")}));b.set("cameraViewReference",c);new ControllerItem({model:b,el:a("body")})}(jQuery)});